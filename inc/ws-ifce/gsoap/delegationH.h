/* delegationH.h
   Generated by gSOAP 2.7.16 from /home/simonm/tmp/build/src/ws-ifce/gsoap/delegation_interface.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef delegationH_H
#define delegationH_H
#include "delegationStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_time
#define SOAP_TYPE_time (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_time(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_time(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_time(struct soap*, const char*, time_t *, const char*);

#define soap_write_time(soap, data) ( soap_begin_send(soap) || soap_put_time(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_time(struct soap*, const time_t *, const char*, const char*);

#define soap_read_time(soap, data) ( soap_begin_recv(soap) || !soap_get_time(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_time(struct soap*, time_t *, const char*, const char*);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__delegation__DelegationException
#define SOAP_TYPE__delegation__DelegationException (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__delegation__DelegationException(struct soap*, const char*, int, const _delegation__DelegationException *, const char*);
SOAP_FMAC3 _delegation__DelegationException * SOAP_FMAC4 soap_in__delegation__DelegationException(struct soap*, const char*, _delegation__DelegationException *, const char*);

#define soap_write__delegation__DelegationException(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__delegation__DelegationException(soap, data) ( soap_begin_recv(soap) || !soap_get__delegation__DelegationException(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _delegation__DelegationException * SOAP_FMAC4 soap_get__delegation__DelegationException(struct soap*, _delegation__DelegationException *, const char*, const char*);

#define soap_new__delegation__DelegationException(soap, n) soap_instantiate__delegation__DelegationException(soap, n, NULL, NULL, NULL)


#define soap_delete__delegation__DelegationException(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _delegation__DelegationException * SOAP_FMAC2 soap_instantiate__delegation__DelegationException(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__delegation__DelegationException(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__NewProxyReq
#define SOAP_TYPE_delegation__NewProxyReq (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__NewProxyReq(struct soap*, const char*, int, const delegation__NewProxyReq *, const char*);
SOAP_FMAC3 delegation__NewProxyReq * SOAP_FMAC4 soap_in_delegation__NewProxyReq(struct soap*, const char*, delegation__NewProxyReq *, const char*);

#define soap_write_delegation__NewProxyReq(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_delegation__NewProxyReq(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__NewProxyReq(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 delegation__NewProxyReq * SOAP_FMAC4 soap_get_delegation__NewProxyReq(struct soap*, delegation__NewProxyReq *, const char*, const char*);

#define soap_new_delegation__NewProxyReq(soap, n) soap_instantiate_delegation__NewProxyReq(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__NewProxyReq(soap, p) soap_delete(soap, p)

SOAP_FMAC1 delegation__NewProxyReq * SOAP_FMAC2 soap_instantiate_delegation__NewProxyReq(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__NewProxyReq(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_delegation__destroy
#define SOAP_TYPE_delegation__destroy (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__destroy(struct soap*, struct delegation__destroy *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__destroy(struct soap*, const struct delegation__destroy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__destroy(struct soap*, const char*, int, const struct delegation__destroy *, const char*);
SOAP_FMAC3 struct delegation__destroy * SOAP_FMAC4 soap_in_delegation__destroy(struct soap*, const char*, struct delegation__destroy *, const char*);

#define soap_write_delegation__destroy(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__destroy(soap, data), 0) || soap_put_delegation__destroy(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__destroy(struct soap*, const struct delegation__destroy *, const char*, const char*);

#define soap_read_delegation__destroy(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__destroy(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__destroy * SOAP_FMAC4 soap_get_delegation__destroy(struct soap*, struct delegation__destroy *, const char*, const char*);

#define soap_new_delegation__destroy(soap, n) soap_instantiate_delegation__destroy(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__destroy(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__destroy * SOAP_FMAC2 soap_instantiate_delegation__destroy(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__destroy(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__destroyResponse
#define SOAP_TYPE_delegation__destroyResponse (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__destroyResponse(struct soap*, struct delegation__destroyResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__destroyResponse(struct soap*, const struct delegation__destroyResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__destroyResponse(struct soap*, const char*, int, const struct delegation__destroyResponse *, const char*);
SOAP_FMAC3 struct delegation__destroyResponse * SOAP_FMAC4 soap_in_delegation__destroyResponse(struct soap*, const char*, struct delegation__destroyResponse *, const char*);

#define soap_write_delegation__destroyResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__destroyResponse(soap, data), 0) || soap_put_delegation__destroyResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__destroyResponse(struct soap*, const struct delegation__destroyResponse *, const char*, const char*);

#define soap_read_delegation__destroyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__destroyResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__destroyResponse * SOAP_FMAC4 soap_get_delegation__destroyResponse(struct soap*, struct delegation__destroyResponse *, const char*, const char*);

#define soap_new_delegation__destroyResponse(soap, n) soap_instantiate_delegation__destroyResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__destroyResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__destroyResponse * SOAP_FMAC2 soap_instantiate_delegation__destroyResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__destroyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__getTerminationTime
#define SOAP_TYPE_delegation__getTerminationTime (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__getTerminationTime(struct soap*, struct delegation__getTerminationTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__getTerminationTime(struct soap*, const struct delegation__getTerminationTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__getTerminationTime(struct soap*, const char*, int, const struct delegation__getTerminationTime *, const char*);
SOAP_FMAC3 struct delegation__getTerminationTime * SOAP_FMAC4 soap_in_delegation__getTerminationTime(struct soap*, const char*, struct delegation__getTerminationTime *, const char*);

#define soap_write_delegation__getTerminationTime(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__getTerminationTime(soap, data), 0) || soap_put_delegation__getTerminationTime(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__getTerminationTime(struct soap*, const struct delegation__getTerminationTime *, const char*, const char*);

#define soap_read_delegation__getTerminationTime(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__getTerminationTime(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__getTerminationTime * SOAP_FMAC4 soap_get_delegation__getTerminationTime(struct soap*, struct delegation__getTerminationTime *, const char*, const char*);

#define soap_new_delegation__getTerminationTime(soap, n) soap_instantiate_delegation__getTerminationTime(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__getTerminationTime(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__getTerminationTime * SOAP_FMAC2 soap_instantiate_delegation__getTerminationTime(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__getTerminationTime(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__getTerminationTimeResponse
#define SOAP_TYPE_delegation__getTerminationTimeResponse (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__getTerminationTimeResponse(struct soap*, struct delegation__getTerminationTimeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__getTerminationTimeResponse(struct soap*, const struct delegation__getTerminationTimeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__getTerminationTimeResponse(struct soap*, const char*, int, const struct delegation__getTerminationTimeResponse *, const char*);
SOAP_FMAC3 struct delegation__getTerminationTimeResponse * SOAP_FMAC4 soap_in_delegation__getTerminationTimeResponse(struct soap*, const char*, struct delegation__getTerminationTimeResponse *, const char*);

#define soap_write_delegation__getTerminationTimeResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__getTerminationTimeResponse(soap, data), 0) || soap_put_delegation__getTerminationTimeResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__getTerminationTimeResponse(struct soap*, const struct delegation__getTerminationTimeResponse *, const char*, const char*);

#define soap_read_delegation__getTerminationTimeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__getTerminationTimeResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__getTerminationTimeResponse * SOAP_FMAC4 soap_get_delegation__getTerminationTimeResponse(struct soap*, struct delegation__getTerminationTimeResponse *, const char*, const char*);

#define soap_new_delegation__getTerminationTimeResponse(soap, n) soap_instantiate_delegation__getTerminationTimeResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__getTerminationTimeResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__getTerminationTimeResponse * SOAP_FMAC2 soap_instantiate_delegation__getTerminationTimeResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__getTerminationTimeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__putProxy
#define SOAP_TYPE_delegation__putProxy (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__putProxy(struct soap*, struct delegation__putProxy *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__putProxy(struct soap*, const struct delegation__putProxy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__putProxy(struct soap*, const char*, int, const struct delegation__putProxy *, const char*);
SOAP_FMAC3 struct delegation__putProxy * SOAP_FMAC4 soap_in_delegation__putProxy(struct soap*, const char*, struct delegation__putProxy *, const char*);

#define soap_write_delegation__putProxy(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__putProxy(soap, data), 0) || soap_put_delegation__putProxy(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__putProxy(struct soap*, const struct delegation__putProxy *, const char*, const char*);

#define soap_read_delegation__putProxy(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__putProxy(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__putProxy * SOAP_FMAC4 soap_get_delegation__putProxy(struct soap*, struct delegation__putProxy *, const char*, const char*);

#define soap_new_delegation__putProxy(soap, n) soap_instantiate_delegation__putProxy(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__putProxy(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__putProxy * SOAP_FMAC2 soap_instantiate_delegation__putProxy(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__putProxy(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__putProxyResponse
#define SOAP_TYPE_delegation__putProxyResponse (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__putProxyResponse(struct soap*, struct delegation__putProxyResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__putProxyResponse(struct soap*, const struct delegation__putProxyResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__putProxyResponse(struct soap*, const char*, int, const struct delegation__putProxyResponse *, const char*);
SOAP_FMAC3 struct delegation__putProxyResponse * SOAP_FMAC4 soap_in_delegation__putProxyResponse(struct soap*, const char*, struct delegation__putProxyResponse *, const char*);

#define soap_write_delegation__putProxyResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__putProxyResponse(soap, data), 0) || soap_put_delegation__putProxyResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__putProxyResponse(struct soap*, const struct delegation__putProxyResponse *, const char*, const char*);

#define soap_read_delegation__putProxyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__putProxyResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__putProxyResponse * SOAP_FMAC4 soap_get_delegation__putProxyResponse(struct soap*, struct delegation__putProxyResponse *, const char*, const char*);

#define soap_new_delegation__putProxyResponse(soap, n) soap_instantiate_delegation__putProxyResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__putProxyResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__putProxyResponse * SOAP_FMAC2 soap_instantiate_delegation__putProxyResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__putProxyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__renewProxyReq
#define SOAP_TYPE_delegation__renewProxyReq (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__renewProxyReq(struct soap*, struct delegation__renewProxyReq *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__renewProxyReq(struct soap*, const struct delegation__renewProxyReq *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__renewProxyReq(struct soap*, const char*, int, const struct delegation__renewProxyReq *, const char*);
SOAP_FMAC3 struct delegation__renewProxyReq * SOAP_FMAC4 soap_in_delegation__renewProxyReq(struct soap*, const char*, struct delegation__renewProxyReq *, const char*);

#define soap_write_delegation__renewProxyReq(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__renewProxyReq(soap, data), 0) || soap_put_delegation__renewProxyReq(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__renewProxyReq(struct soap*, const struct delegation__renewProxyReq *, const char*, const char*);

#define soap_read_delegation__renewProxyReq(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__renewProxyReq(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__renewProxyReq * SOAP_FMAC4 soap_get_delegation__renewProxyReq(struct soap*, struct delegation__renewProxyReq *, const char*, const char*);

#define soap_new_delegation__renewProxyReq(soap, n) soap_instantiate_delegation__renewProxyReq(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__renewProxyReq(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__renewProxyReq * SOAP_FMAC2 soap_instantiate_delegation__renewProxyReq(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__renewProxyReq(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__renewProxyReqResponse
#define SOAP_TYPE_delegation__renewProxyReqResponse (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__renewProxyReqResponse(struct soap*, struct delegation__renewProxyReqResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__renewProxyReqResponse(struct soap*, const struct delegation__renewProxyReqResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__renewProxyReqResponse(struct soap*, const char*, int, const struct delegation__renewProxyReqResponse *, const char*);
SOAP_FMAC3 struct delegation__renewProxyReqResponse * SOAP_FMAC4 soap_in_delegation__renewProxyReqResponse(struct soap*, const char*, struct delegation__renewProxyReqResponse *, const char*);

#define soap_write_delegation__renewProxyReqResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__renewProxyReqResponse(soap, data), 0) || soap_put_delegation__renewProxyReqResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__renewProxyReqResponse(struct soap*, const struct delegation__renewProxyReqResponse *, const char*, const char*);

#define soap_read_delegation__renewProxyReqResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__renewProxyReqResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__renewProxyReqResponse * SOAP_FMAC4 soap_get_delegation__renewProxyReqResponse(struct soap*, struct delegation__renewProxyReqResponse *, const char*, const char*);

#define soap_new_delegation__renewProxyReqResponse(soap, n) soap_instantiate_delegation__renewProxyReqResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__renewProxyReqResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__renewProxyReqResponse * SOAP_FMAC2 soap_instantiate_delegation__renewProxyReqResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__renewProxyReqResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__getNewProxyReq
#define SOAP_TYPE_delegation__getNewProxyReq (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__getNewProxyReq(struct soap*, struct delegation__getNewProxyReq *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__getNewProxyReq(struct soap*, const struct delegation__getNewProxyReq *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__getNewProxyReq(struct soap*, const char*, int, const struct delegation__getNewProxyReq *, const char*);
SOAP_FMAC3 struct delegation__getNewProxyReq * SOAP_FMAC4 soap_in_delegation__getNewProxyReq(struct soap*, const char*, struct delegation__getNewProxyReq *, const char*);

#define soap_write_delegation__getNewProxyReq(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__getNewProxyReq(soap, data), 0) || soap_put_delegation__getNewProxyReq(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__getNewProxyReq(struct soap*, const struct delegation__getNewProxyReq *, const char*, const char*);

#define soap_read_delegation__getNewProxyReq(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__getNewProxyReq(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__getNewProxyReq * SOAP_FMAC4 soap_get_delegation__getNewProxyReq(struct soap*, struct delegation__getNewProxyReq *, const char*, const char*);

#define soap_new_delegation__getNewProxyReq(soap, n) soap_instantiate_delegation__getNewProxyReq(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__getNewProxyReq(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__getNewProxyReq * SOAP_FMAC2 soap_instantiate_delegation__getNewProxyReq(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__getNewProxyReq(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__getNewProxyReqResponse
#define SOAP_TYPE_delegation__getNewProxyReqResponse (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__getNewProxyReqResponse(struct soap*, struct delegation__getNewProxyReqResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__getNewProxyReqResponse(struct soap*, const struct delegation__getNewProxyReqResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__getNewProxyReqResponse(struct soap*, const char*, int, const struct delegation__getNewProxyReqResponse *, const char*);
SOAP_FMAC3 struct delegation__getNewProxyReqResponse * SOAP_FMAC4 soap_in_delegation__getNewProxyReqResponse(struct soap*, const char*, struct delegation__getNewProxyReqResponse *, const char*);

#define soap_write_delegation__getNewProxyReqResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__getNewProxyReqResponse(soap, data), 0) || soap_put_delegation__getNewProxyReqResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__getNewProxyReqResponse(struct soap*, const struct delegation__getNewProxyReqResponse *, const char*, const char*);

#define soap_read_delegation__getNewProxyReqResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__getNewProxyReqResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__getNewProxyReqResponse * SOAP_FMAC4 soap_get_delegation__getNewProxyReqResponse(struct soap*, struct delegation__getNewProxyReqResponse *, const char*, const char*);

#define soap_new_delegation__getNewProxyReqResponse(soap, n) soap_instantiate_delegation__getNewProxyReqResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__getNewProxyReqResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__getNewProxyReqResponse * SOAP_FMAC2 soap_instantiate_delegation__getNewProxyReqResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__getNewProxyReqResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__getProxyReq
#define SOAP_TYPE_delegation__getProxyReq (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__getProxyReq(struct soap*, struct delegation__getProxyReq *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__getProxyReq(struct soap*, const struct delegation__getProxyReq *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__getProxyReq(struct soap*, const char*, int, const struct delegation__getProxyReq *, const char*);
SOAP_FMAC3 struct delegation__getProxyReq * SOAP_FMAC4 soap_in_delegation__getProxyReq(struct soap*, const char*, struct delegation__getProxyReq *, const char*);

#define soap_write_delegation__getProxyReq(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__getProxyReq(soap, data), 0) || soap_put_delegation__getProxyReq(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__getProxyReq(struct soap*, const struct delegation__getProxyReq *, const char*, const char*);

#define soap_read_delegation__getProxyReq(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__getProxyReq(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__getProxyReq * SOAP_FMAC4 soap_get_delegation__getProxyReq(struct soap*, struct delegation__getProxyReq *, const char*, const char*);

#define soap_new_delegation__getProxyReq(soap, n) soap_instantiate_delegation__getProxyReq(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__getProxyReq(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__getProxyReq * SOAP_FMAC2 soap_instantiate_delegation__getProxyReq(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__getProxyReq(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__getProxyReqResponse
#define SOAP_TYPE_delegation__getProxyReqResponse (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__getProxyReqResponse(struct soap*, struct delegation__getProxyReqResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__getProxyReqResponse(struct soap*, const struct delegation__getProxyReqResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__getProxyReqResponse(struct soap*, const char*, int, const struct delegation__getProxyReqResponse *, const char*);
SOAP_FMAC3 struct delegation__getProxyReqResponse * SOAP_FMAC4 soap_in_delegation__getProxyReqResponse(struct soap*, const char*, struct delegation__getProxyReqResponse *, const char*);

#define soap_write_delegation__getProxyReqResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__getProxyReqResponse(soap, data), 0) || soap_put_delegation__getProxyReqResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__getProxyReqResponse(struct soap*, const struct delegation__getProxyReqResponse *, const char*, const char*);

#define soap_read_delegation__getProxyReqResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__getProxyReqResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__getProxyReqResponse * SOAP_FMAC4 soap_get_delegation__getProxyReqResponse(struct soap*, struct delegation__getProxyReqResponse *, const char*, const char*);

#define soap_new_delegation__getProxyReqResponse(soap, n) soap_instantiate_delegation__getProxyReqResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__getProxyReqResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__getProxyReqResponse * SOAP_FMAC2 soap_instantiate_delegation__getProxyReqResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__getProxyReqResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__getServiceMetadata
#define SOAP_TYPE_delegation__getServiceMetadata (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__getServiceMetadata(struct soap*, struct delegation__getServiceMetadata *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__getServiceMetadata(struct soap*, const struct delegation__getServiceMetadata *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__getServiceMetadata(struct soap*, const char*, int, const struct delegation__getServiceMetadata *, const char*);
SOAP_FMAC3 struct delegation__getServiceMetadata * SOAP_FMAC4 soap_in_delegation__getServiceMetadata(struct soap*, const char*, struct delegation__getServiceMetadata *, const char*);

#define soap_write_delegation__getServiceMetadata(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__getServiceMetadata(soap, data), 0) || soap_put_delegation__getServiceMetadata(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__getServiceMetadata(struct soap*, const struct delegation__getServiceMetadata *, const char*, const char*);

#define soap_read_delegation__getServiceMetadata(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__getServiceMetadata(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__getServiceMetadata * SOAP_FMAC4 soap_get_delegation__getServiceMetadata(struct soap*, struct delegation__getServiceMetadata *, const char*, const char*);

#define soap_new_delegation__getServiceMetadata(soap, n) soap_instantiate_delegation__getServiceMetadata(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__getServiceMetadata(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__getServiceMetadata * SOAP_FMAC2 soap_instantiate_delegation__getServiceMetadata(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__getServiceMetadata(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__getServiceMetadataResponse
#define SOAP_TYPE_delegation__getServiceMetadataResponse (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__getServiceMetadataResponse(struct soap*, struct delegation__getServiceMetadataResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__getServiceMetadataResponse(struct soap*, const struct delegation__getServiceMetadataResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__getServiceMetadataResponse(struct soap*, const char*, int, const struct delegation__getServiceMetadataResponse *, const char*);
SOAP_FMAC3 struct delegation__getServiceMetadataResponse * SOAP_FMAC4 soap_in_delegation__getServiceMetadataResponse(struct soap*, const char*, struct delegation__getServiceMetadataResponse *, const char*);

#define soap_write_delegation__getServiceMetadataResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__getServiceMetadataResponse(soap, data), 0) || soap_put_delegation__getServiceMetadataResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__getServiceMetadataResponse(struct soap*, const struct delegation__getServiceMetadataResponse *, const char*, const char*);

#define soap_read_delegation__getServiceMetadataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__getServiceMetadataResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__getServiceMetadataResponse * SOAP_FMAC4 soap_get_delegation__getServiceMetadataResponse(struct soap*, struct delegation__getServiceMetadataResponse *, const char*, const char*);

#define soap_new_delegation__getServiceMetadataResponse(soap, n) soap_instantiate_delegation__getServiceMetadataResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__getServiceMetadataResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__getServiceMetadataResponse * SOAP_FMAC2 soap_instantiate_delegation__getServiceMetadataResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__getServiceMetadataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__getInterfaceVersion
#define SOAP_TYPE_delegation__getInterfaceVersion (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__getInterfaceVersion(struct soap*, struct delegation__getInterfaceVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__getInterfaceVersion(struct soap*, const struct delegation__getInterfaceVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__getInterfaceVersion(struct soap*, const char*, int, const struct delegation__getInterfaceVersion *, const char*);
SOAP_FMAC3 struct delegation__getInterfaceVersion * SOAP_FMAC4 soap_in_delegation__getInterfaceVersion(struct soap*, const char*, struct delegation__getInterfaceVersion *, const char*);

#define soap_write_delegation__getInterfaceVersion(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__getInterfaceVersion(soap, data), 0) || soap_put_delegation__getInterfaceVersion(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__getInterfaceVersion(struct soap*, const struct delegation__getInterfaceVersion *, const char*, const char*);

#define soap_read_delegation__getInterfaceVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__getInterfaceVersion(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__getInterfaceVersion * SOAP_FMAC4 soap_get_delegation__getInterfaceVersion(struct soap*, struct delegation__getInterfaceVersion *, const char*, const char*);

#define soap_new_delegation__getInterfaceVersion(soap, n) soap_instantiate_delegation__getInterfaceVersion(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__getInterfaceVersion(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__getInterfaceVersion * SOAP_FMAC2 soap_instantiate_delegation__getInterfaceVersion(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__getInterfaceVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__getInterfaceVersionResponse
#define SOAP_TYPE_delegation__getInterfaceVersionResponse (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__getInterfaceVersionResponse(struct soap*, struct delegation__getInterfaceVersionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__getInterfaceVersionResponse(struct soap*, const struct delegation__getInterfaceVersionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__getInterfaceVersionResponse(struct soap*, const char*, int, const struct delegation__getInterfaceVersionResponse *, const char*);
SOAP_FMAC3 struct delegation__getInterfaceVersionResponse * SOAP_FMAC4 soap_in_delegation__getInterfaceVersionResponse(struct soap*, const char*, struct delegation__getInterfaceVersionResponse *, const char*);

#define soap_write_delegation__getInterfaceVersionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__getInterfaceVersionResponse(soap, data), 0) || soap_put_delegation__getInterfaceVersionResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__getInterfaceVersionResponse(struct soap*, const struct delegation__getInterfaceVersionResponse *, const char*, const char*);

#define soap_read_delegation__getInterfaceVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__getInterfaceVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__getInterfaceVersionResponse * SOAP_FMAC4 soap_get_delegation__getInterfaceVersionResponse(struct soap*, struct delegation__getInterfaceVersionResponse *, const char*, const char*);

#define soap_new_delegation__getInterfaceVersionResponse(soap, n) soap_instantiate_delegation__getInterfaceVersionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__getInterfaceVersionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__getInterfaceVersionResponse * SOAP_FMAC2 soap_instantiate_delegation__getInterfaceVersionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__getInterfaceVersionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__getVersion
#define SOAP_TYPE_delegation__getVersion (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__getVersion(struct soap*, struct delegation__getVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__getVersion(struct soap*, const struct delegation__getVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__getVersion(struct soap*, const char*, int, const struct delegation__getVersion *, const char*);
SOAP_FMAC3 struct delegation__getVersion * SOAP_FMAC4 soap_in_delegation__getVersion(struct soap*, const char*, struct delegation__getVersion *, const char*);

#define soap_write_delegation__getVersion(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__getVersion(soap, data), 0) || soap_put_delegation__getVersion(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__getVersion(struct soap*, const struct delegation__getVersion *, const char*, const char*);

#define soap_read_delegation__getVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__getVersion(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__getVersion * SOAP_FMAC4 soap_get_delegation__getVersion(struct soap*, struct delegation__getVersion *, const char*, const char*);

#define soap_new_delegation__getVersion(soap, n) soap_instantiate_delegation__getVersion(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__getVersion(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__getVersion * SOAP_FMAC2 soap_instantiate_delegation__getVersion(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__getVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_delegation__getVersionResponse
#define SOAP_TYPE_delegation__getVersionResponse (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_delegation__getVersionResponse(struct soap*, struct delegation__getVersionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_delegation__getVersionResponse(struct soap*, const struct delegation__getVersionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_delegation__getVersionResponse(struct soap*, const char*, int, const struct delegation__getVersionResponse *, const char*);
SOAP_FMAC3 struct delegation__getVersionResponse * SOAP_FMAC4 soap_in_delegation__getVersionResponse(struct soap*, const char*, struct delegation__getVersionResponse *, const char*);

#define soap_write_delegation__getVersionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_delegation__getVersionResponse(soap, data), 0) || soap_put_delegation__getVersionResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_delegation__getVersionResponse(struct soap*, const struct delegation__getVersionResponse *, const char*, const char*);

#define soap_read_delegation__getVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_delegation__getVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct delegation__getVersionResponse * SOAP_FMAC4 soap_get_delegation__getVersionResponse(struct soap*, struct delegation__getVersionResponse *, const char*, const char*);

#define soap_new_delegation__getVersionResponse(soap, n) soap_instantiate_delegation__getVersionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_delegation__getVersionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct delegation__getVersionResponse * SOAP_FMAC2 soap_instantiate_delegation__getVersionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_delegation__getVersionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTodelegation__NewProxyReq
#define SOAP_TYPE_PointerTodelegation__NewProxyReq (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodelegation__NewProxyReq(struct soap*, delegation__NewProxyReq *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodelegation__NewProxyReq(struct soap*, const char *, int, delegation__NewProxyReq *const*, const char *);
SOAP_FMAC3 delegation__NewProxyReq ** SOAP_FMAC4 soap_in_PointerTodelegation__NewProxyReq(struct soap*, const char*, delegation__NewProxyReq **, const char*);

#define soap_write_PointerTodelegation__NewProxyReq(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTodelegation__NewProxyReq(soap, data), 0) || soap_put_PointerTodelegation__NewProxyReq(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodelegation__NewProxyReq(struct soap*, delegation__NewProxyReq *const*, const char*, const char*);

#define soap_read_PointerTodelegation__NewProxyReq(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTodelegation__NewProxyReq(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 delegation__NewProxyReq ** SOAP_FMAC4 soap_get_PointerTodelegation__NewProxyReq(struct soap*, delegation__NewProxyReq **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_delegation__DelegationException
#define SOAP_TYPE_PointerTo_delegation__DelegationException (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_delegation__DelegationException(struct soap*, _delegation__DelegationException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_delegation__DelegationException(struct soap*, const char *, int, _delegation__DelegationException *const*, const char *);
SOAP_FMAC3 _delegation__DelegationException ** SOAP_FMAC4 soap_in_PointerTo_delegation__DelegationException(struct soap*, const char*, _delegation__DelegationException **, const char*);

#define soap_write_PointerTo_delegation__DelegationException(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_delegation__DelegationException(soap, data), 0) || soap_put_PointerTo_delegation__DelegationException(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_delegation__DelegationException(struct soap*, _delegation__DelegationException *const*, const char*, const char*);

#define soap_read_PointerTo_delegation__DelegationException(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_delegation__DelegationException(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _delegation__DelegationException ** SOAP_FMAC4 soap_get_PointerTo_delegation__DelegationException(struct soap*, _delegation__DelegationException **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);

#define soap_write_PointerTostd__string(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data), 0) || soap_put_PointerTostd__string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of delegationH.h */
