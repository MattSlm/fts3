/* ftsFileTransferSoapBindingService.h
   Generated by gSOAP 2.7.13 from fts3-transfer-submit.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef ftsFileTransferSoapBindingService_H
#define ftsFileTransferSoapBindingService_H
#include "ftsH.h"
class SOAP_CMAC FileTransferSoapBindingService : public soap
{ public:
	/// Constructor
	FileTransferSoapBindingService();
	/// Constructor with copy of another engine state
	FileTransferSoapBindingService(const struct soap&);
	/// Constructor with engine input+output mode control
	FileTransferSoapBindingService(soap_mode iomode);
	/// Constructor with engine input and output mode control
	FileTransferSoapBindingService(soap_mode imode, soap_mode omode);
	/// Destructor frees all data
	virtual ~FileTransferSoapBindingService();
	/// Initializer used by constructor
	virtual	void FileTransferSoapBindingService_init(soap_mode imode, soap_mode omode);
	/// Create a copy
	virtual	FileTransferSoapBindingService *copy();
	/// Force close connection (normally automatic)
	virtual	int soap_close_socket();
	/// Return sender-related fault to sender
	virtual	int soap_senderfault(const char *string, const char *detailXML);
	/// Return sender-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Return receiver-related fault to sender
	virtual	int soap_receiverfault(const char *string, const char *detailXML);
	/// Return receiver-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Run simple single-thread iterative service on port until a connection error occurs (returns error code or SOAP_OK), use this->bind_flag = SO_REUSEADDR to rebind for a rerun
	virtual	int run(int port);
	/// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET bind(const char *host, int port, int backlog);
	/// Accept next request (returns socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET accept();
	/// Serve this request (returns error code or SOAP_OK)
	virtual	int serve();
	/// Used by serve() to dispatch a request (returns error code or SOAP_OK)
	virtual	int dispatch();

	///
	/// Service operations (you should define these):
	///

	/// Web service operation 'placementSubmit' (returns error code or SOAP_OK)
	virtual	int placementSubmit(transfer__PlacementJob *_job, struct fts__placementSubmitResponse &_param_1);

	/// Web service operation 'placementSubmit2' (returns error code or SOAP_OK)
	virtual	int placementSubmit2(transfer__PlacementJob *_job, struct fts__placementSubmit2Response &_param_2);

	/// Web service operation 'transferSubmit' (returns error code or SOAP_OK)
	virtual	int transferSubmit(transfer__TransferJob *_job, struct fts__transferSubmitResponse &_param_3);

	/// Web service operation 'transferSubmit2' (returns error code or SOAP_OK)
	virtual	int transferSubmit2(transfer__TransferJob *_job, struct fts__transferSubmit2Response &_param_4);

	/// Web service operation 'transferSubmit3' (returns error code or SOAP_OK)
	virtual	int transferSubmit3(transfer__TransferJob2 *_job, struct fts__transferSubmit3Response &_param_5);

	/// Web service operation 'submit' (returns error code or SOAP_OK)
	virtual	int submit(transfer__TransferJob *_job, struct fts__submitResponse &_param_6);

	/// Web service operation 'listRequests' (returns error code or SOAP_OK)
	virtual	int listRequests(fts__ArrayOf_USCOREsoapenc_USCOREstring *_inGivenStates, struct fts__listRequestsResponse &_param_7);

	/// Web service operation 'listRequests2' (returns error code or SOAP_OK)
	virtual	int listRequests2(fts__ArrayOf_USCOREsoapenc_USCOREstring *_inGivenStates, std::string _forDN, std::string _forVO, struct fts__listRequests2Response &_param_8);

	/// Web service operation 'getFileStatus' (returns error code or SOAP_OK)
	virtual	int getFileStatus(std::string _requestID, int _offset, int _limit, struct fts__getFileStatusResponse &_param_9);

	/// Web service operation 'getFileStatus2' (returns error code or SOAP_OK)
	virtual	int getFileStatus2(std::string _requestID, int _offset, int _limit, struct fts__getFileStatus2Response &_param_10);

	/// Web service operation 'getTransferJobStatus' (returns error code or SOAP_OK)
	virtual	int getTransferJobStatus(std::string _requestID, struct fts__getTransferJobStatusResponse &_param_11);

	/// Web service operation 'getTransferJobSummary' (returns error code or SOAP_OK)
	virtual	int getTransferJobSummary(std::string _requestID, struct fts__getTransferJobSummaryResponse &_param_12);

	/// Web service operation 'getTransferJobSummary2' (returns error code or SOAP_OK)
	virtual	int getTransferJobSummary2(std::string _requestID, struct fts__getTransferJobSummary2Response &_param_13);

	/// Web service operation 'cancel' (returns error code or SOAP_OK)
	virtual	int cancel(fts__ArrayOf_USCOREsoapenc_USCOREstring *_requestIDs, struct fts__cancelResponse &_param_14);

	/// Web service operation 'setJobPriority' (returns error code or SOAP_OK)
	virtual	int setJobPriority(std::string _requestID, int _priority, struct fts__setJobPriorityResponse &_param_15);

	/// Web service operation 'addVOManager' (returns error code or SOAP_OK)
	virtual	int addVOManager(std::string _VOName, std::string _principal, struct fts__addVOManagerResponse &_param_16);

	/// Web service operation 'removeVOManager' (returns error code or SOAP_OK)
	virtual	int removeVOManager(std::string _VOName, std::string _principal, struct fts__removeVOManagerResponse &_param_17);

	/// Web service operation 'listVOManagers' (returns error code or SOAP_OK)
	virtual	int listVOManagers(std::string _VOName, struct fts__listVOManagersResponse &_param_18);

	/// Web service operation 'getRoles' (returns error code or SOAP_OK)
	virtual	int getRoles(struct fts__getRolesResponse &_param_19);

	/// Web service operation 'getRolesOf' (returns error code or SOAP_OK)
	virtual	int getRolesOf(std::string _otherDN, struct fts__getRolesOfResponse &_param_20);

	/// Web service operation 'getVersion' (returns error code or SOAP_OK)
	virtual	int getVersion(struct fts__getVersionResponse &_param_21);

	/// Web service operation 'getSchemaVersion' (returns error code or SOAP_OK)
	virtual	int getSchemaVersion(struct fts__getSchemaVersionResponse &_param_22);

	/// Web service operation 'getInterfaceVersion' (returns error code or SOAP_OK)
	virtual	int getInterfaceVersion(struct fts__getInterfaceVersionResponse &_param_23);

	/// Web service operation 'getServiceMetadata' (returns error code or SOAP_OK)
	virtual	int getServiceMetadata(std::string _key, struct fts__getServiceMetadataResponse &_param_24);
};
#endif
