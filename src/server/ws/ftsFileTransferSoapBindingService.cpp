/* ftsFileTransferSoapBindingService.cpp
   Generated by gSOAP 2.7.13 from fts3-transfer-submit.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#include "ftsFileTransferSoapBindingService.h"

FileTransferSoapBindingService::FileTransferSoapBindingService()
{	FileTransferSoapBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

FileTransferSoapBindingService::FileTransferSoapBindingService(const struct soap &soap)
{	soap_copy_context(this, &soap);
	FileTransferSoapBindingService_init(soap.imode, soap.omode);
}

FileTransferSoapBindingService::FileTransferSoapBindingService(soap_mode iomode)
{	FileTransferSoapBindingService_init(iomode, iomode);
}

FileTransferSoapBindingService::FileTransferSoapBindingService(soap_mode imode, soap_mode omode)
{	FileTransferSoapBindingService_init(imode, omode);
}

FileTransferSoapBindingService::~FileTransferSoapBindingService()
{ }

void FileTransferSoapBindingService::FileTransferSoapBindingService_init(soap_mode imode, soap_mode omode)
{	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"transfer", "http://transfer.data.glite.org", NULL, NULL},
	{"fts", "http://glite.org/wsdl/services/org.glite.data.transfer.fts", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_imode(this, imode);
	soap_omode(this, omode);
	this->namespaces = namespaces;
};

FileTransferSoapBindingService *FileTransferSoapBindingService::copy()
{	FileTransferSoapBindingService *dup = new FileTransferSoapBindingService(*(struct soap*)this);
	return dup;
}

int FileTransferSoapBindingService::soap_close_socket()
{	return soap_closesock(this);
}

int FileTransferSoapBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int FileTransferSoapBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int FileTransferSoapBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int FileTransferSoapBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void FileTransferSoapBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void FileTransferSoapBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *FileTransferSoapBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void FileTransferSoapBindingService::soap_noheader()
{	header = NULL;
}

int FileTransferSoapBindingService::run(int port)
{	if (soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()))
				return this->error;
			(void)serve();
			soap_destroy(this);
			soap_end(this);
		}
	}
	else
		return this->error;
	return SOAP_OK;
}

SOAP_SOCKET FileTransferSoapBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET FileTransferSoapBindingService::accept()
{	return soap_accept(this);
}

int FileTransferSoapBindingService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->max_keep_alive;
#endif
	do
	{	soap_begin(this);
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			this->error = SOAP_EOF;
			return soap_send_fault(this);
		}
#endif

		soap_begin(this);

#ifndef WITH_FASTCGI
		if (this->max_keep_alive > 0 && !--k)
			this->keep_alive = 0;
#endif

		if (soap_begin_recv(this))
		{	if (this->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(this);
#else
				return soap_send_fault(this);
#endif
			}
			soap_closesock(this);

			continue;
		}

		if (soap_envelope_begin_in(this)
		 || soap_recv_header(this)
		 || soap_body_begin_in(this)
		 || dispatch() || (this->fserveloop && this->fserveloop(this)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve_fts__placementSubmit(FileTransferSoapBindingService*);
static int serve_fts__placementSubmit2(FileTransferSoapBindingService*);
static int serve_fts__transferSubmit(FileTransferSoapBindingService*);
static int serve_fts__transferSubmit2(FileTransferSoapBindingService*);
static int serve_fts__transferSubmit3(FileTransferSoapBindingService*);
static int serve_fts__submit(FileTransferSoapBindingService*);
static int serve_fts__listRequests(FileTransferSoapBindingService*);
static int serve_fts__listRequests2(FileTransferSoapBindingService*);
static int serve_fts__getFileStatus(FileTransferSoapBindingService*);
static int serve_fts__getFileStatus2(FileTransferSoapBindingService*);
static int serve_fts__getTransferJobStatus(FileTransferSoapBindingService*);
static int serve_fts__getTransferJobSummary(FileTransferSoapBindingService*);
static int serve_fts__getTransferJobSummary2(FileTransferSoapBindingService*);
static int serve_fts__cancel(FileTransferSoapBindingService*);
static int serve_fts__setJobPriority(FileTransferSoapBindingService*);
static int serve_fts__addVOManager(FileTransferSoapBindingService*);
static int serve_fts__removeVOManager(FileTransferSoapBindingService*);
static int serve_fts__listVOManagers(FileTransferSoapBindingService*);
static int serve_fts__getRoles(FileTransferSoapBindingService*);
static int serve_fts__getRolesOf(FileTransferSoapBindingService*);
static int serve_fts__getVersion(FileTransferSoapBindingService*);
static int serve_fts__getSchemaVersion(FileTransferSoapBindingService*);
static int serve_fts__getInterfaceVersion(FileTransferSoapBindingService*);
static int serve_fts__getServiceMetadata(FileTransferSoapBindingService*);

int FileTransferSoapBindingService::dispatch()
{	if (soap_peek_element(this))
		return this->error;
	if (!soap_match_tag(this, this->tag, "fts:placementSubmit"))
		return serve_fts__placementSubmit(this);
	if (!soap_match_tag(this, this->tag, "fts:placementSubmit2"))
		return serve_fts__placementSubmit2(this);
	if (!soap_match_tag(this, this->tag, "fts:transferSubmit"))
		return serve_fts__transferSubmit(this);
	if (!soap_match_tag(this, this->tag, "fts:transferSubmit2"))
		return serve_fts__transferSubmit2(this);
	if (!soap_match_tag(this, this->tag, "fts:transferSubmit3"))
		return serve_fts__transferSubmit3(this);
	if (!soap_match_tag(this, this->tag, "fts:submit"))
		return serve_fts__submit(this);
	if (!soap_match_tag(this, this->tag, "fts:listRequests"))
		return serve_fts__listRequests(this);
	if (!soap_match_tag(this, this->tag, "fts:listRequests2"))
		return serve_fts__listRequests2(this);
	if (!soap_match_tag(this, this->tag, "fts:getFileStatus"))
		return serve_fts__getFileStatus(this);
	if (!soap_match_tag(this, this->tag, "fts:getFileStatus2"))
		return serve_fts__getFileStatus2(this);
	if (!soap_match_tag(this, this->tag, "fts:getTransferJobStatus"))
		return serve_fts__getTransferJobStatus(this);
	if (!soap_match_tag(this, this->tag, "fts:getTransferJobSummary"))
		return serve_fts__getTransferJobSummary(this);
	if (!soap_match_tag(this, this->tag, "fts:getTransferJobSummary2"))
		return serve_fts__getTransferJobSummary2(this);
	if (!soap_match_tag(this, this->tag, "fts:cancel"))
		return serve_fts__cancel(this);
	if (!soap_match_tag(this, this->tag, "fts:setJobPriority"))
		return serve_fts__setJobPriority(this);
	if (!soap_match_tag(this, this->tag, "fts:addVOManager"))
		return serve_fts__addVOManager(this);
	if (!soap_match_tag(this, this->tag, "fts:removeVOManager"))
		return serve_fts__removeVOManager(this);
	if (!soap_match_tag(this, this->tag, "fts:listVOManagers"))
		return serve_fts__listVOManagers(this);
	if (!soap_match_tag(this, this->tag, "fts:getRoles"))
		return serve_fts__getRoles(this);
	if (!soap_match_tag(this, this->tag, "fts:getRolesOf"))
		return serve_fts__getRolesOf(this);
	if (!soap_match_tag(this, this->tag, "fts:getVersion"))
		return serve_fts__getVersion(this);
	if (!soap_match_tag(this, this->tag, "fts:getSchemaVersion"))
		return serve_fts__getSchemaVersion(this);
	if (!soap_match_tag(this, this->tag, "fts:getInterfaceVersion"))
		return serve_fts__getInterfaceVersion(this);
	if (!soap_match_tag(this, this->tag, "fts:getServiceMetadata"))
		return serve_fts__getServiceMetadata(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve_fts__placementSubmit(FileTransferSoapBindingService *soap)
{	struct fts__placementSubmit soap_tmp_fts__placementSubmit;
	struct fts__placementSubmitResponse _param_1;
	soap_default_fts__placementSubmitResponse(soap, &_param_1);
	soap_default_fts__placementSubmit(soap, &soap_tmp_fts__placementSubmit);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__placementSubmit(soap, &soap_tmp_fts__placementSubmit, "fts:placementSubmit", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->placementSubmit(soap_tmp_fts__placementSubmit._job, _param_1);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__placementSubmitResponse(soap, &_param_1);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__placementSubmitResponse(soap, &_param_1, "fts:placementSubmitResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__placementSubmitResponse(soap, &_param_1, "fts:placementSubmitResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__placementSubmit2(FileTransferSoapBindingService *soap)
{	struct fts__placementSubmit2 soap_tmp_fts__placementSubmit2;
	struct fts__placementSubmit2Response _param_2;
	soap_default_fts__placementSubmit2Response(soap, &_param_2);
	soap_default_fts__placementSubmit2(soap, &soap_tmp_fts__placementSubmit2);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__placementSubmit2(soap, &soap_tmp_fts__placementSubmit2, "fts:placementSubmit2", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->placementSubmit2(soap_tmp_fts__placementSubmit2._job, _param_2);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__placementSubmit2Response(soap, &_param_2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__placementSubmit2Response(soap, &_param_2, "fts:placementSubmit2Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__placementSubmit2Response(soap, &_param_2, "fts:placementSubmit2Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__transferSubmit(FileTransferSoapBindingService *soap)
{	struct fts__transferSubmit soap_tmp_fts__transferSubmit;
	struct fts__transferSubmitResponse _param_3;
	soap_default_fts__transferSubmitResponse(soap, &_param_3);
	soap_default_fts__transferSubmit(soap, &soap_tmp_fts__transferSubmit);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__transferSubmit(soap, &soap_tmp_fts__transferSubmit, "fts:transferSubmit", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->transferSubmit(soap_tmp_fts__transferSubmit._job, _param_3);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__transferSubmitResponse(soap, &_param_3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__transferSubmitResponse(soap, &_param_3, "fts:transferSubmitResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__transferSubmitResponse(soap, &_param_3, "fts:transferSubmitResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__transferSubmit2(FileTransferSoapBindingService *soap)
{	struct fts__transferSubmit2 soap_tmp_fts__transferSubmit2;
	struct fts__transferSubmit2Response _param_4;
	soap_default_fts__transferSubmit2Response(soap, &_param_4);
	soap_default_fts__transferSubmit2(soap, &soap_tmp_fts__transferSubmit2);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__transferSubmit2(soap, &soap_tmp_fts__transferSubmit2, "fts:transferSubmit2", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->transferSubmit2(soap_tmp_fts__transferSubmit2._job, _param_4);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__transferSubmit2Response(soap, &_param_4);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__transferSubmit2Response(soap, &_param_4, "fts:transferSubmit2Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__transferSubmit2Response(soap, &_param_4, "fts:transferSubmit2Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__transferSubmit3(FileTransferSoapBindingService *soap)
{	struct fts__transferSubmit3 soap_tmp_fts__transferSubmit3;
	struct fts__transferSubmit3Response _param_5;
	soap_default_fts__transferSubmit3Response(soap, &_param_5);
	soap_default_fts__transferSubmit3(soap, &soap_tmp_fts__transferSubmit3);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__transferSubmit3(soap, &soap_tmp_fts__transferSubmit3, "fts:transferSubmit3", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->transferSubmit3(soap_tmp_fts__transferSubmit3._job, _param_5);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__transferSubmit3Response(soap, &_param_5);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__transferSubmit3Response(soap, &_param_5, "fts:transferSubmit3Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__transferSubmit3Response(soap, &_param_5, "fts:transferSubmit3Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__submit(FileTransferSoapBindingService *soap)
{	struct fts__submit soap_tmp_fts__submit;
	struct fts__submitResponse _param_6;
	soap_default_fts__submitResponse(soap, &_param_6);
	soap_default_fts__submit(soap, &soap_tmp_fts__submit);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__submit(soap, &soap_tmp_fts__submit, "fts:submit", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->submit(soap_tmp_fts__submit._job, _param_6);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__submitResponse(soap, &_param_6);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__submitResponse(soap, &_param_6, "fts:submitResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__submitResponse(soap, &_param_6, "fts:submitResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__listRequests(FileTransferSoapBindingService *soap)
{	struct fts__listRequests soap_tmp_fts__listRequests;
	struct fts__listRequestsResponse _param_7;
	soap_default_fts__listRequestsResponse(soap, &_param_7);
	soap_default_fts__listRequests(soap, &soap_tmp_fts__listRequests);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__listRequests(soap, &soap_tmp_fts__listRequests, "fts:listRequests", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->listRequests(soap_tmp_fts__listRequests._inGivenStates, _param_7);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__listRequestsResponse(soap, &_param_7);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__listRequestsResponse(soap, &_param_7, "fts:listRequestsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__listRequestsResponse(soap, &_param_7, "fts:listRequestsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__listRequests2(FileTransferSoapBindingService *soap)
{	struct fts__listRequests2 soap_tmp_fts__listRequests2;
	struct fts__listRequests2Response _param_8;
	soap_default_fts__listRequests2Response(soap, &_param_8);
	soap_default_fts__listRequests2(soap, &soap_tmp_fts__listRequests2);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__listRequests2(soap, &soap_tmp_fts__listRequests2, "fts:listRequests2", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->listRequests2(soap_tmp_fts__listRequests2._inGivenStates, soap_tmp_fts__listRequests2._forDN, soap_tmp_fts__listRequests2._forVO, _param_8);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__listRequests2Response(soap, &_param_8);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__listRequests2Response(soap, &_param_8, "fts:listRequests2Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__listRequests2Response(soap, &_param_8, "fts:listRequests2Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__getFileStatus(FileTransferSoapBindingService *soap)
{	struct fts__getFileStatus soap_tmp_fts__getFileStatus;
	struct fts__getFileStatusResponse _param_9;
	soap_default_fts__getFileStatusResponse(soap, &_param_9);
	soap_default_fts__getFileStatus(soap, &soap_tmp_fts__getFileStatus);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__getFileStatus(soap, &soap_tmp_fts__getFileStatus, "fts:getFileStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getFileStatus(soap_tmp_fts__getFileStatus._requestID, soap_tmp_fts__getFileStatus._offset, soap_tmp_fts__getFileStatus._limit, _param_9);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__getFileStatusResponse(soap, &_param_9);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getFileStatusResponse(soap, &_param_9, "fts:getFileStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getFileStatusResponse(soap, &_param_9, "fts:getFileStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__getFileStatus2(FileTransferSoapBindingService *soap)
{	struct fts__getFileStatus2 soap_tmp_fts__getFileStatus2;
	struct fts__getFileStatus2Response _param_10;
	soap_default_fts__getFileStatus2Response(soap, &_param_10);
	soap_default_fts__getFileStatus2(soap, &soap_tmp_fts__getFileStatus2);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__getFileStatus2(soap, &soap_tmp_fts__getFileStatus2, "fts:getFileStatus2", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getFileStatus2(soap_tmp_fts__getFileStatus2._requestID, soap_tmp_fts__getFileStatus2._offset, soap_tmp_fts__getFileStatus2._limit, _param_10);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__getFileStatus2Response(soap, &_param_10);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getFileStatus2Response(soap, &_param_10, "fts:getFileStatus2Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getFileStatus2Response(soap, &_param_10, "fts:getFileStatus2Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__getTransferJobStatus(FileTransferSoapBindingService *soap)
{	struct fts__getTransferJobStatus soap_tmp_fts__getTransferJobStatus;
	struct fts__getTransferJobStatusResponse _param_11;
	soap_default_fts__getTransferJobStatusResponse(soap, &_param_11);
	soap_default_fts__getTransferJobStatus(soap, &soap_tmp_fts__getTransferJobStatus);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__getTransferJobStatus(soap, &soap_tmp_fts__getTransferJobStatus, "fts:getTransferJobStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getTransferJobStatus(soap_tmp_fts__getTransferJobStatus._requestID, _param_11);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__getTransferJobStatusResponse(soap, &_param_11);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getTransferJobStatusResponse(soap, &_param_11, "fts:getTransferJobStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getTransferJobStatusResponse(soap, &_param_11, "fts:getTransferJobStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__getTransferJobSummary(FileTransferSoapBindingService *soap)
{	struct fts__getTransferJobSummary soap_tmp_fts__getTransferJobSummary;
	struct fts__getTransferJobSummaryResponse _param_12;
	soap_default_fts__getTransferJobSummaryResponse(soap, &_param_12);
	soap_default_fts__getTransferJobSummary(soap, &soap_tmp_fts__getTransferJobSummary);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__getTransferJobSummary(soap, &soap_tmp_fts__getTransferJobSummary, "fts:getTransferJobSummary", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getTransferJobSummary(soap_tmp_fts__getTransferJobSummary._requestID, _param_12);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__getTransferJobSummaryResponse(soap, &_param_12);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getTransferJobSummaryResponse(soap, &_param_12, "fts:getTransferJobSummaryResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getTransferJobSummaryResponse(soap, &_param_12, "fts:getTransferJobSummaryResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__getTransferJobSummary2(FileTransferSoapBindingService *soap)
{	struct fts__getTransferJobSummary2 soap_tmp_fts__getTransferJobSummary2;
	struct fts__getTransferJobSummary2Response _param_13;
	soap_default_fts__getTransferJobSummary2Response(soap, &_param_13);
	soap_default_fts__getTransferJobSummary2(soap, &soap_tmp_fts__getTransferJobSummary2);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__getTransferJobSummary2(soap, &soap_tmp_fts__getTransferJobSummary2, "fts:getTransferJobSummary2", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getTransferJobSummary2(soap_tmp_fts__getTransferJobSummary2._requestID, _param_13);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__getTransferJobSummary2Response(soap, &_param_13);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getTransferJobSummary2Response(soap, &_param_13, "fts:getTransferJobSummary2Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getTransferJobSummary2Response(soap, &_param_13, "fts:getTransferJobSummary2Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__cancel(FileTransferSoapBindingService *soap)
{	struct fts__cancel soap_tmp_fts__cancel;
	struct fts__cancelResponse _param_14;
	soap_default_fts__cancelResponse(soap, &_param_14);
	soap_default_fts__cancel(soap, &soap_tmp_fts__cancel);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__cancel(soap, &soap_tmp_fts__cancel, "fts:cancel", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->cancel(soap_tmp_fts__cancel._requestIDs, _param_14);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__cancelResponse(soap, &_param_14);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__cancelResponse(soap, &_param_14, "fts:cancelResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__cancelResponse(soap, &_param_14, "fts:cancelResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__setJobPriority(FileTransferSoapBindingService *soap)
{	struct fts__setJobPriority soap_tmp_fts__setJobPriority;
	struct fts__setJobPriorityResponse _param_15;
	soap_default_fts__setJobPriorityResponse(soap, &_param_15);
	soap_default_fts__setJobPriority(soap, &soap_tmp_fts__setJobPriority);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__setJobPriority(soap, &soap_tmp_fts__setJobPriority, "fts:setJobPriority", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->setJobPriority(soap_tmp_fts__setJobPriority._requestID, soap_tmp_fts__setJobPriority._priority, _param_15);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__setJobPriorityResponse(soap, &_param_15);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__setJobPriorityResponse(soap, &_param_15, "fts:setJobPriorityResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__setJobPriorityResponse(soap, &_param_15, "fts:setJobPriorityResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__addVOManager(FileTransferSoapBindingService *soap)
{	struct fts__addVOManager soap_tmp_fts__addVOManager;
	struct fts__addVOManagerResponse _param_16;
	soap_default_fts__addVOManagerResponse(soap, &_param_16);
	soap_default_fts__addVOManager(soap, &soap_tmp_fts__addVOManager);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__addVOManager(soap, &soap_tmp_fts__addVOManager, "fts:addVOManager", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->addVOManager(soap_tmp_fts__addVOManager._VOName, soap_tmp_fts__addVOManager._principal, _param_16);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__addVOManagerResponse(soap, &_param_16);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__addVOManagerResponse(soap, &_param_16, "fts:addVOManagerResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__addVOManagerResponse(soap, &_param_16, "fts:addVOManagerResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__removeVOManager(FileTransferSoapBindingService *soap)
{	struct fts__removeVOManager soap_tmp_fts__removeVOManager;
	struct fts__removeVOManagerResponse _param_17;
	soap_default_fts__removeVOManagerResponse(soap, &_param_17);
	soap_default_fts__removeVOManager(soap, &soap_tmp_fts__removeVOManager);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__removeVOManager(soap, &soap_tmp_fts__removeVOManager, "fts:removeVOManager", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->removeVOManager(soap_tmp_fts__removeVOManager._VOName, soap_tmp_fts__removeVOManager._principal, _param_17);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__removeVOManagerResponse(soap, &_param_17);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__removeVOManagerResponse(soap, &_param_17, "fts:removeVOManagerResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__removeVOManagerResponse(soap, &_param_17, "fts:removeVOManagerResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__listVOManagers(FileTransferSoapBindingService *soap)
{	struct fts__listVOManagers soap_tmp_fts__listVOManagers;
	struct fts__listVOManagersResponse _param_18;
	soap_default_fts__listVOManagersResponse(soap, &_param_18);
	soap_default_fts__listVOManagers(soap, &soap_tmp_fts__listVOManagers);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__listVOManagers(soap, &soap_tmp_fts__listVOManagers, "fts:listVOManagers", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->listVOManagers(soap_tmp_fts__listVOManagers._VOName, _param_18);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__listVOManagersResponse(soap, &_param_18);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__listVOManagersResponse(soap, &_param_18, "fts:listVOManagersResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__listVOManagersResponse(soap, &_param_18, "fts:listVOManagersResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__getRoles(FileTransferSoapBindingService *soap)
{	struct fts__getRoles soap_tmp_fts__getRoles;
	struct fts__getRolesResponse _param_19;
	soap_default_fts__getRolesResponse(soap, &_param_19);
	soap_default_fts__getRoles(soap, &soap_tmp_fts__getRoles);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__getRoles(soap, &soap_tmp_fts__getRoles, "fts:getRoles", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getRoles(_param_19);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__getRolesResponse(soap, &_param_19);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getRolesResponse(soap, &_param_19, "fts:getRolesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getRolesResponse(soap, &_param_19, "fts:getRolesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__getRolesOf(FileTransferSoapBindingService *soap)
{	struct fts__getRolesOf soap_tmp_fts__getRolesOf;
	struct fts__getRolesOfResponse _param_20;
	soap_default_fts__getRolesOfResponse(soap, &_param_20);
	soap_default_fts__getRolesOf(soap, &soap_tmp_fts__getRolesOf);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__getRolesOf(soap, &soap_tmp_fts__getRolesOf, "fts:getRolesOf", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getRolesOf(soap_tmp_fts__getRolesOf._otherDN, _param_20);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__getRolesOfResponse(soap, &_param_20);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getRolesOfResponse(soap, &_param_20, "fts:getRolesOfResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getRolesOfResponse(soap, &_param_20, "fts:getRolesOfResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__getVersion(FileTransferSoapBindingService *soap)
{	struct fts__getVersion soap_tmp_fts__getVersion;
	struct fts__getVersionResponse _param_21;
	soap_default_fts__getVersionResponse(soap, &_param_21);
	soap_default_fts__getVersion(soap, &soap_tmp_fts__getVersion);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__getVersion(soap, &soap_tmp_fts__getVersion, "fts:getVersion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getVersion(_param_21);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__getVersionResponse(soap, &_param_21);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getVersionResponse(soap, &_param_21, "fts:getVersionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getVersionResponse(soap, &_param_21, "fts:getVersionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__getSchemaVersion(FileTransferSoapBindingService *soap)
{	struct fts__getSchemaVersion soap_tmp_fts__getSchemaVersion;
	struct fts__getSchemaVersionResponse _param_22;
	soap_default_fts__getSchemaVersionResponse(soap, &_param_22);
	soap_default_fts__getSchemaVersion(soap, &soap_tmp_fts__getSchemaVersion);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__getSchemaVersion(soap, &soap_tmp_fts__getSchemaVersion, "fts:getSchemaVersion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getSchemaVersion(_param_22);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__getSchemaVersionResponse(soap, &_param_22);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getSchemaVersionResponse(soap, &_param_22, "fts:getSchemaVersionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getSchemaVersionResponse(soap, &_param_22, "fts:getSchemaVersionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__getInterfaceVersion(FileTransferSoapBindingService *soap)
{	struct fts__getInterfaceVersion soap_tmp_fts__getInterfaceVersion;
	struct fts__getInterfaceVersionResponse _param_23;
	soap_default_fts__getInterfaceVersionResponse(soap, &_param_23);
	soap_default_fts__getInterfaceVersion(soap, &soap_tmp_fts__getInterfaceVersion);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__getInterfaceVersion(soap, &soap_tmp_fts__getInterfaceVersion, "fts:getInterfaceVersion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getInterfaceVersion(_param_23);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__getInterfaceVersionResponse(soap, &_param_23);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getInterfaceVersionResponse(soap, &_param_23, "fts:getInterfaceVersionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getInterfaceVersionResponse(soap, &_param_23, "fts:getInterfaceVersionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_fts__getServiceMetadata(FileTransferSoapBindingService *soap)
{	struct fts__getServiceMetadata soap_tmp_fts__getServiceMetadata;
	struct fts__getServiceMetadataResponse _param_24;
	soap_default_fts__getServiceMetadataResponse(soap, &_param_24);
	soap_default_fts__getServiceMetadata(soap, &soap_tmp_fts__getServiceMetadata);
	soap->encodingStyle = NULL;
	if (!soap_get_fts__getServiceMetadata(soap, &soap_tmp_fts__getServiceMetadata, "fts:getServiceMetadata", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getServiceMetadata(soap_tmp_fts__getServiceMetadata._key, _param_24);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_fts__getServiceMetadataResponse(soap, &_param_24);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getServiceMetadataResponse(soap, &_param_24, "fts:getServiceMetadataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getServiceMetadataResponse(soap, &_param_24, "fts:getServiceMetadataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
