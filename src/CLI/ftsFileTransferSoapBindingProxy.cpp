/* ftsFileTransferSoapBindingProxy.cpp
   Generated by gSOAP 2.7.13 from fts3-transfer-submit.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#include "ftsFileTransferSoapBindingProxy.h"

FileTransferSoapBindingProxy::FileTransferSoapBindingProxy()
{	FileTransferSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

FileTransferSoapBindingProxy::FileTransferSoapBindingProxy(const struct soap &soap)
{	soap_copy_context(this, &soap);
	FileTransferSoapBindingProxy_init(soap.imode, soap.omode);
}

FileTransferSoapBindingProxy::FileTransferSoapBindingProxy(soap_mode iomode)
{	FileTransferSoapBindingProxy_init(iomode, iomode);
}

FileTransferSoapBindingProxy::FileTransferSoapBindingProxy(soap_mode imode, soap_mode omode)
{	FileTransferSoapBindingProxy_init(imode, omode);
}

void FileTransferSoapBindingProxy::FileTransferSoapBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"transfer", "http://transfer.data.glite.org", NULL, NULL},
	{"fts", "http://glite.org/wsdl/services/org.glite.data.transfer.fts", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	this->namespaces = namespaces;
}

FileTransferSoapBindingProxy::~FileTransferSoapBindingProxy()
{ }

void FileTransferSoapBindingProxy::soap_noheader()
{	header = NULL;
}

const SOAP_ENV__Fault *FileTransferSoapBindingProxy::soap_fault()
{	return this->fault;
}

const char *FileTransferSoapBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *FileTransferSoapBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int FileTransferSoapBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

void FileTransferSoapBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void FileTransferSoapBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *FileTransferSoapBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int FileTransferSoapBindingProxy::placementSubmit(transfer__PlacementJob *_job, struct fts__placementSubmitResponse &_param_1)
{	struct soap *soap = this;
	struct fts__placementSubmit soap_tmp_fts__placementSubmit;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__placementSubmit._job = _job;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__placementSubmit(soap, &soap_tmp_fts__placementSubmit);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__placementSubmit(soap, &soap_tmp_fts__placementSubmit, "fts:placementSubmit", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__placementSubmit(soap, &soap_tmp_fts__placementSubmit, "fts:placementSubmit", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_1)
		return soap_closesock(soap);
	soap_default_fts__placementSubmitResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__placementSubmitResponse(soap, &_param_1, "fts:placementSubmitResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::placementSubmit2(transfer__PlacementJob *_job, struct fts__placementSubmit2Response &_param_2)
{	struct soap *soap = this;
	struct fts__placementSubmit2 soap_tmp_fts__placementSubmit2;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__placementSubmit2._job = _job;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__placementSubmit2(soap, &soap_tmp_fts__placementSubmit2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__placementSubmit2(soap, &soap_tmp_fts__placementSubmit2, "fts:placementSubmit2", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__placementSubmit2(soap, &soap_tmp_fts__placementSubmit2, "fts:placementSubmit2", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_2)
		return soap_closesock(soap);
	soap_default_fts__placementSubmit2Response(soap, &_param_2);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__placementSubmit2Response(soap, &_param_2, "fts:placementSubmit2Response", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::transferSubmit(transfer__TransferJob *_job, struct fts__transferSubmitResponse &_param_3)
{	struct soap *soap = this;
	struct fts__transferSubmit soap_tmp_fts__transferSubmit;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__transferSubmit._job = _job;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__transferSubmit(soap, &soap_tmp_fts__transferSubmit);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__transferSubmit(soap, &soap_tmp_fts__transferSubmit, "fts:transferSubmit", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__transferSubmit(soap, &soap_tmp_fts__transferSubmit, "fts:transferSubmit", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_3)
		return soap_closesock(soap);
	soap_default_fts__transferSubmitResponse(soap, &_param_3);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__transferSubmitResponse(soap, &_param_3, "fts:transferSubmitResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::transferSubmit2(transfer__TransferJob *_job, struct fts__transferSubmit2Response &_param_4)
{	struct soap *soap = this;
	struct fts__transferSubmit2 soap_tmp_fts__transferSubmit2;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__transferSubmit2._job = _job;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__transferSubmit2(soap, &soap_tmp_fts__transferSubmit2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__transferSubmit2(soap, &soap_tmp_fts__transferSubmit2, "fts:transferSubmit2", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__transferSubmit2(soap, &soap_tmp_fts__transferSubmit2, "fts:transferSubmit2", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_4)
		return soap_closesock(soap);
	soap_default_fts__transferSubmit2Response(soap, &_param_4);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__transferSubmit2Response(soap, &_param_4, "fts:transferSubmit2Response", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::transferSubmit3(transfer__TransferJob2 *_job, struct fts__transferSubmit3Response &_param_5)
{	struct soap *soap = this;
	struct fts__transferSubmit3 soap_tmp_fts__transferSubmit3;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__transferSubmit3._job = _job;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__transferSubmit3(soap, &soap_tmp_fts__transferSubmit3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__transferSubmit3(soap, &soap_tmp_fts__transferSubmit3, "fts:transferSubmit3", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__transferSubmit3(soap, &soap_tmp_fts__transferSubmit3, "fts:transferSubmit3", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_5)
		return soap_closesock(soap);
	soap_default_fts__transferSubmit3Response(soap, &_param_5);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__transferSubmit3Response(soap, &_param_5, "fts:transferSubmit3Response", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::submit(transfer__TransferJob *_job, struct fts__submitResponse &_param_6)
{	struct soap *soap = this;
	struct fts__submit soap_tmp_fts__submit;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__submit._job = _job;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__submit(soap, &soap_tmp_fts__submit);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__submit(soap, &soap_tmp_fts__submit, "fts:submit", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__submit(soap, &soap_tmp_fts__submit, "fts:submit", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_6)
		return soap_closesock(soap);
	soap_default_fts__submitResponse(soap, &_param_6);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__submitResponse(soap, &_param_6, "fts:submitResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::listRequests(fts__ArrayOf_USCOREsoapenc_USCOREstring *_inGivenStates, struct fts__listRequestsResponse &_param_7)
{	struct soap *soap = this;
	struct fts__listRequests soap_tmp_fts__listRequests;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__listRequests._inGivenStates = _inGivenStates;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__listRequests(soap, &soap_tmp_fts__listRequests);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__listRequests(soap, &soap_tmp_fts__listRequests, "fts:listRequests", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__listRequests(soap, &soap_tmp_fts__listRequests, "fts:listRequests", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_7)
		return soap_closesock(soap);
	soap_default_fts__listRequestsResponse(soap, &_param_7);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__listRequestsResponse(soap, &_param_7, "fts:listRequestsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::listRequests2(fts__ArrayOf_USCOREsoapenc_USCOREstring *_inGivenStates, std::string _forDN, std::string _forVO, struct fts__listRequests2Response &_param_8)
{	struct soap *soap = this;
	struct fts__listRequests2 soap_tmp_fts__listRequests2;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__listRequests2._inGivenStates = _inGivenStates;
	soap_tmp_fts__listRequests2._forDN = _forDN;
	soap_tmp_fts__listRequests2._forVO = _forVO;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__listRequests2(soap, &soap_tmp_fts__listRequests2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__listRequests2(soap, &soap_tmp_fts__listRequests2, "fts:listRequests2", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__listRequests2(soap, &soap_tmp_fts__listRequests2, "fts:listRequests2", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_8)
		return soap_closesock(soap);
	soap_default_fts__listRequests2Response(soap, &_param_8);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__listRequests2Response(soap, &_param_8, "fts:listRequests2Response", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::getFileStatus(std::string _requestID, int _offset, int _limit, struct fts__getFileStatusResponse &_param_9)
{	struct soap *soap = this;
	struct fts__getFileStatus soap_tmp_fts__getFileStatus;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__getFileStatus._requestID = _requestID;
	soap_tmp_fts__getFileStatus._offset = _offset;
	soap_tmp_fts__getFileStatus._limit = _limit;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__getFileStatus(soap, &soap_tmp_fts__getFileStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getFileStatus(soap, &soap_tmp_fts__getFileStatus, "fts:getFileStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getFileStatus(soap, &soap_tmp_fts__getFileStatus, "fts:getFileStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_9)
		return soap_closesock(soap);
	soap_default_fts__getFileStatusResponse(soap, &_param_9);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__getFileStatusResponse(soap, &_param_9, "fts:getFileStatusResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::getFileStatus2(std::string _requestID, int _offset, int _limit, struct fts__getFileStatus2Response &_param_10)
{	struct soap *soap = this;
	struct fts__getFileStatus2 soap_tmp_fts__getFileStatus2;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__getFileStatus2._requestID = _requestID;
	soap_tmp_fts__getFileStatus2._offset = _offset;
	soap_tmp_fts__getFileStatus2._limit = _limit;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__getFileStatus2(soap, &soap_tmp_fts__getFileStatus2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getFileStatus2(soap, &soap_tmp_fts__getFileStatus2, "fts:getFileStatus2", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getFileStatus2(soap, &soap_tmp_fts__getFileStatus2, "fts:getFileStatus2", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_10)
		return soap_closesock(soap);
	soap_default_fts__getFileStatus2Response(soap, &_param_10);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__getFileStatus2Response(soap, &_param_10, "fts:getFileStatus2Response", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::getTransferJobStatus(std::string _requestID, struct fts__getTransferJobStatusResponse &_param_11)
{	struct soap *soap = this;
	struct fts__getTransferJobStatus soap_tmp_fts__getTransferJobStatus;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__getTransferJobStatus._requestID = _requestID;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__getTransferJobStatus(soap, &soap_tmp_fts__getTransferJobStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getTransferJobStatus(soap, &soap_tmp_fts__getTransferJobStatus, "fts:getTransferJobStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getTransferJobStatus(soap, &soap_tmp_fts__getTransferJobStatus, "fts:getTransferJobStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_11)
		return soap_closesock(soap);
	soap_default_fts__getTransferJobStatusResponse(soap, &_param_11);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__getTransferJobStatusResponse(soap, &_param_11, "fts:getTransferJobStatusResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::getTransferJobSummary(std::string _requestID, struct fts__getTransferJobSummaryResponse &_param_12)
{	struct soap *soap = this;
	struct fts__getTransferJobSummary soap_tmp_fts__getTransferJobSummary;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__getTransferJobSummary._requestID = _requestID;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__getTransferJobSummary(soap, &soap_tmp_fts__getTransferJobSummary);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getTransferJobSummary(soap, &soap_tmp_fts__getTransferJobSummary, "fts:getTransferJobSummary", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getTransferJobSummary(soap, &soap_tmp_fts__getTransferJobSummary, "fts:getTransferJobSummary", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_12)
		return soap_closesock(soap);
	soap_default_fts__getTransferJobSummaryResponse(soap, &_param_12);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__getTransferJobSummaryResponse(soap, &_param_12, "fts:getTransferJobSummaryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::getTransferJobSummary2(std::string _requestID, struct fts__getTransferJobSummary2Response &_param_13)
{	struct soap *soap = this;
	struct fts__getTransferJobSummary2 soap_tmp_fts__getTransferJobSummary2;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__getTransferJobSummary2._requestID = _requestID;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__getTransferJobSummary2(soap, &soap_tmp_fts__getTransferJobSummary2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getTransferJobSummary2(soap, &soap_tmp_fts__getTransferJobSummary2, "fts:getTransferJobSummary2", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getTransferJobSummary2(soap, &soap_tmp_fts__getTransferJobSummary2, "fts:getTransferJobSummary2", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_13)
		return soap_closesock(soap);
	soap_default_fts__getTransferJobSummary2Response(soap, &_param_13);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__getTransferJobSummary2Response(soap, &_param_13, "fts:getTransferJobSummary2Response", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::cancel(fts__ArrayOf_USCOREsoapenc_USCOREstring *_requestIDs, struct fts__cancelResponse &_param_14)
{	struct soap *soap = this;
	struct fts__cancel soap_tmp_fts__cancel;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__cancel._requestIDs = _requestIDs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__cancel(soap, &soap_tmp_fts__cancel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__cancel(soap, &soap_tmp_fts__cancel, "fts:cancel", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__cancel(soap, &soap_tmp_fts__cancel, "fts:cancel", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_14)
		return soap_closesock(soap);
	soap_default_fts__cancelResponse(soap, &_param_14);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__cancelResponse(soap, &_param_14, "fts:cancelResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::setJobPriority(std::string _requestID, int _priority, struct fts__setJobPriorityResponse &_param_15)
{	struct soap *soap = this;
	struct fts__setJobPriority soap_tmp_fts__setJobPriority;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__setJobPriority._requestID = _requestID;
	soap_tmp_fts__setJobPriority._priority = _priority;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__setJobPriority(soap, &soap_tmp_fts__setJobPriority);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__setJobPriority(soap, &soap_tmp_fts__setJobPriority, "fts:setJobPriority", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__setJobPriority(soap, &soap_tmp_fts__setJobPriority, "fts:setJobPriority", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_15)
		return soap_closesock(soap);
	soap_default_fts__setJobPriorityResponse(soap, &_param_15);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__setJobPriorityResponse(soap, &_param_15, "fts:setJobPriorityResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::addVOManager(std::string _VOName, std::string _principal, struct fts__addVOManagerResponse &_param_16)
{	struct soap *soap = this;
	struct fts__addVOManager soap_tmp_fts__addVOManager;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__addVOManager._VOName = _VOName;
	soap_tmp_fts__addVOManager._principal = _principal;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__addVOManager(soap, &soap_tmp_fts__addVOManager);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__addVOManager(soap, &soap_tmp_fts__addVOManager, "fts:addVOManager", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__addVOManager(soap, &soap_tmp_fts__addVOManager, "fts:addVOManager", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_16)
		return soap_closesock(soap);
	soap_default_fts__addVOManagerResponse(soap, &_param_16);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__addVOManagerResponse(soap, &_param_16, "fts:addVOManagerResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::removeVOManager(std::string _VOName, std::string _principal, struct fts__removeVOManagerResponse &_param_17)
{	struct soap *soap = this;
	struct fts__removeVOManager soap_tmp_fts__removeVOManager;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__removeVOManager._VOName = _VOName;
	soap_tmp_fts__removeVOManager._principal = _principal;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__removeVOManager(soap, &soap_tmp_fts__removeVOManager);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__removeVOManager(soap, &soap_tmp_fts__removeVOManager, "fts:removeVOManager", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__removeVOManager(soap, &soap_tmp_fts__removeVOManager, "fts:removeVOManager", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_17)
		return soap_closesock(soap);
	soap_default_fts__removeVOManagerResponse(soap, &_param_17);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__removeVOManagerResponse(soap, &_param_17, "fts:removeVOManagerResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::listVOManagers(std::string _VOName, struct fts__listVOManagersResponse &_param_18)
{	struct soap *soap = this;
	struct fts__listVOManagers soap_tmp_fts__listVOManagers;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__listVOManagers._VOName = _VOName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__listVOManagers(soap, &soap_tmp_fts__listVOManagers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__listVOManagers(soap, &soap_tmp_fts__listVOManagers, "fts:listVOManagers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__listVOManagers(soap, &soap_tmp_fts__listVOManagers, "fts:listVOManagers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_18)
		return soap_closesock(soap);
	soap_default_fts__listVOManagersResponse(soap, &_param_18);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__listVOManagersResponse(soap, &_param_18, "fts:listVOManagersResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::getRoles(struct fts__getRolesResponse &_param_19)
{	struct soap *soap = this;
	struct fts__getRoles soap_tmp_fts__getRoles;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__getRoles(soap, &soap_tmp_fts__getRoles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getRoles(soap, &soap_tmp_fts__getRoles, "fts:getRoles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getRoles(soap, &soap_tmp_fts__getRoles, "fts:getRoles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_19)
		return soap_closesock(soap);
	soap_default_fts__getRolesResponse(soap, &_param_19);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__getRolesResponse(soap, &_param_19, "fts:getRolesResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::getRolesOf(std::string _otherDN, struct fts__getRolesOfResponse &_param_20)
{	struct soap *soap = this;
	struct fts__getRolesOf soap_tmp_fts__getRolesOf;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__getRolesOf._otherDN = _otherDN;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__getRolesOf(soap, &soap_tmp_fts__getRolesOf);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getRolesOf(soap, &soap_tmp_fts__getRolesOf, "fts:getRolesOf", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getRolesOf(soap, &soap_tmp_fts__getRolesOf, "fts:getRolesOf", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_20)
		return soap_closesock(soap);
	soap_default_fts__getRolesOfResponse(soap, &_param_20);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__getRolesOfResponse(soap, &_param_20, "fts:getRolesOfResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::getVersion(struct fts__getVersionResponse &_param_21)
{	struct soap *soap = this;
	struct fts__getVersion soap_tmp_fts__getVersion;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__getVersion(soap, &soap_tmp_fts__getVersion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getVersion(soap, &soap_tmp_fts__getVersion, "fts:getVersion", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getVersion(soap, &soap_tmp_fts__getVersion, "fts:getVersion", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_21)
		return soap_closesock(soap);
	soap_default_fts__getVersionResponse(soap, &_param_21);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__getVersionResponse(soap, &_param_21, "fts:getVersionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::getSchemaVersion(struct fts__getSchemaVersionResponse &_param_22)
{	struct soap *soap = this;
	struct fts__getSchemaVersion soap_tmp_fts__getSchemaVersion;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__getSchemaVersion(soap, &soap_tmp_fts__getSchemaVersion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getSchemaVersion(soap, &soap_tmp_fts__getSchemaVersion, "fts:getSchemaVersion", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getSchemaVersion(soap, &soap_tmp_fts__getSchemaVersion, "fts:getSchemaVersion", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_22)
		return soap_closesock(soap);
	soap_default_fts__getSchemaVersionResponse(soap, &_param_22);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__getSchemaVersionResponse(soap, &_param_22, "fts:getSchemaVersionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::getInterfaceVersion(struct fts__getInterfaceVersionResponse &_param_23)
{	struct soap *soap = this;
	struct fts__getInterfaceVersion soap_tmp_fts__getInterfaceVersion;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__getInterfaceVersion(soap, &soap_tmp_fts__getInterfaceVersion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getInterfaceVersion(soap, &soap_tmp_fts__getInterfaceVersion, "fts:getInterfaceVersion", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getInterfaceVersion(soap, &soap_tmp_fts__getInterfaceVersion, "fts:getInterfaceVersion", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_23)
		return soap_closesock(soap);
	soap_default_fts__getInterfaceVersionResponse(soap, &_param_23);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__getInterfaceVersionResponse(soap, &_param_23, "fts:getInterfaceVersionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int FileTransferSoapBindingProxy::getServiceMetadata(std::string _key, struct fts__getServiceMetadataResponse &_param_24)
{	struct soap *soap = this;
	struct fts__getServiceMetadata soap_tmp_fts__getServiceMetadata;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "https://localhost:8443/glite-data-transfer-interface/FileTransfer";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp_fts__getServiceMetadata._key = _key;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_fts__getServiceMetadata(soap, &soap_tmp_fts__getServiceMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_fts__getServiceMetadata(soap, &soap_tmp_fts__getServiceMetadata, "fts:getServiceMetadata", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_fts__getServiceMetadata(soap, &soap_tmp_fts__getServiceMetadata, "fts:getServiceMetadata", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_24)
		return soap_closesock(soap);
	soap_default_fts__getServiceMetadataResponse(soap, &_param_24);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_fts__getServiceMetadataResponse(soap, &_param_24, "fts:getServiceMetadataResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
