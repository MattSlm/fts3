#!/usr/bin/env python
# meta: proxy=true
# meta: preconfig=../FTS3-config
import itertools
import logging
from lib import base, storage


class TestBringOnline(base.TestRepeatEach):
    
    def setUp(self):
        base.TestRepeatEach.setUp(self)
        # Remove non-srm surls
        self.transfers = filter(lambda pair: pair[0].startswith('srm://'), self.transfers)
        
    def test_bring_online(self, transfer):
        """
        Do a transfer enabling bring online
        """
        src, dst = transfer
        logging.info("Transfer with bring online %s => %s" % (src, dst))
        self.surl.create(src)
        jobId = self.client.submit([{'sources': [src], 'destinations': [dst]}], ['--bring-online=120','-o'])
        logging.info("Got job id %s" % jobId)
        
        state = self.client.poll(jobId)
        
        self.assertEqual('FINISHED', state, 'job.state')
            
    
    def test_bring_online_only(self, transfer):
        """
        Source and destination are the same, so only bring online is done
        """
        src, dst = transfer
        logging.info("Transfer with bring online %s => %s" % (src, dst))
        self.surl.create(src)
        jobId = self.client.submit([{'sources': [src], 'destinations': [src]}], ['--bring-online=120'] )
        logging.info("Got job id %s" % jobId)
        
        state = self.client.poll(jobId)
        
        self.assertEqual('FINISHED', state, 'job.state')


if __name__ == '__main__':
    import sys
    sys.exit(TestBringOnline().run())
